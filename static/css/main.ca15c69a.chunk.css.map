{"version":3,"sources":["webpack://src/index.css","webpack://src/components/ui/Header.css","webpack://src/components/character/CharacterGrid.css","webpack://src/components/searchcharacter/SearchCharacter.css","webpack://src/App.css"],"names":[],"mappings":"AAAA,EAEE,qBAAsB,CACtB,QAAS,CACT,SACF,CAEA,UAGE,sFAAgE,CAEhE,YAAa,CACb,UAAW,CACX,sCACF,CAEA,EACE,oBACF,CCnBA,OACE,YACF,CAEA,WACE,WACF,CAEA,QACI,oBAAa,CAAb,YAAa,CACb,0BAAmB,CAAnB,kBAAmB,CACnB,8BAAuB,CAAvB,sBACF,CCZF,OACI,YAAa,CAUb,mCAAoC,CACpC,aAAS,CAAT,QACJ,CAEA,MAEK,cAAe,CACf,4BAA6B,CAC7B,YAAa,CAEb,0BAAmB,CAAnB,kBACL,CAEA,SACI,cAAe,CACf,aAAkB,CAClB,6BAA8B,CAC9B,mBAAoB,CACpB,kBACJ,CAEA,UACI,UAAW,CACX,YAAa,CAGb,gBACF,CAEA,YACE,iBAAkB,CAClB,UAAW,CACX,WAAY,CAIZ,gCAA0B,CAA1B,wBAA0B,CAA1B,8CAA0B,CAC1B,mCAA4B,CAA5B,2BACF,CAEA,wBACE,iCAA0B,CAA1B,yBACF,CAEA,uBAEE,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,kCAAmC,CACnC,0BACF,CAEA,WACE,qBAAsB,CACtB,aAAiB,CACjB,iBAAkB,CAClB,2CAA8C,CAC9C,YAAa,CACb,iCAA0B,CAA1B,yBACF,CAEA,SACE,eAAgB,CAChB,mBACF,CAEA,yBACE,OACE,mCACF,CACF,CAEA,yBACE,OACE,yBACF,CACA,UACE,UAAW,CACX,YAAa,CACb,kBACF,CACF,CC7FF,QACI,YACF,CAEF,iBACI,aAAc,CACd,YAAa,CACb,cAAe,CACf,QAAS,CACT,iBAAkB,CAClB,SAAU,CACV,WAAY,CACZ,YACJ,CCbA,KAIE,WAAY,CAKZ,iBAAkB,CAGlB,gBACF","file":"main.ca15c69a.chunk.css","sourcesContent":["*{\n  /* box-sizing property allows us to include the padding and border in an element's total width and height. */\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nhtml,\nbody {\n  /* background: bg-color bg-image position/bg-size bg-repeat background-position; */\n  background: #000 url('img/bg.jpg') no-repeat center center/cover;\n  /* Viewport Height (vh). This unit is based on the height of the viewport. A value of 1vh is equal to 1% of the viewport height. Viewport Width (vw). */\n  height: 100vh;\n  color: #fff;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\na {\n  text-decoration: none;\n}","header {\n  height: 200px;\n}\n\nheader img {\n  width: 200px;\n}\n\n.center {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }",".cards {\n    display: grid;\n    /* grid-template-columns\n    The repeat() CSS function represents a repeated fragment of the track list, \n    allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\n    \n    This function can be used in the CSS Grid properties grid-template-columns and grid-template-rows. \n    \n    <flex>\n    A non-negative dimension with the unit fr specifying the trackâ€™s flex factor. Each <flex>-sized track takes a share of the remaining space in proportion to its flex factor.\n    */\n    grid-template-columns: repeat(4,1fr);\n    gap: 1rem;\n}\n\n.card {\n     /* Give a hand on my cursor */\n     cursor: pointer;\n     background-color: transparent;\n     height: 300px;\n     /* The perspective property is used to give a 3D-positioned element some perspective. */\n     perspective: 1000px;\n}\n\n.card h1 {\n    font-size: 25px;\n    color: yellowgreen;\n    border-bottom: 1px #fff dotted;\n    padding-bottom: 10px;\n    margin-bottom: 10px;\n}\n\n.card img {\n    width: 100%;\n    height: 300px;\n    /* The object-fit property is used to specify how an <img> or <video> should be resized to fit its container.\n    It trims the side of the image. Fitting it into the container */\n    object-fit: cover;\n  }\n  \n  .card-inner {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    /* Perform some transition */\n    /* The transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements. */\n    /* perform 3d transformation after 0.8Sec */\n    transition: transform 0.8s;\n    transform-style: preserve-3d;\n  }\n  \n  .card:hover .card-inner {\n    transform: rotateY(180deg);\n  }\n  \n  .card-front,\n  .card-back {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n  }\n  \n  .card-back {\n    background-color: #333;\n    color: whitesmoke;\n    font-style: italic;\n    font-family: 'Courier New', Courier, monospace;\n    padding: 20px;\n    transform: rotateY(180deg);\n  }\n  \n  .card li {\n    list-style: none;\n    padding-bottom: 10px;\n  }\n  \n  @media (max-width: 800px) {\n    .cards {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n  \n  @media (max-width: 500px) {\n    .cards {\n      grid-template-columns: 1fr;\n    }\n    .card img {\n      width: 100%;\n      height: 300px;\n      object-fit: contain;\n    }\n  }",".search {\n    height: 100px;\n  }\n  \ninput[type='text'] {\n    display: block;\n    padding: 10px;\n    font-size: 20px;\n    border: 0;\n    border-radius: 5px;\n    width: 60%;\n    margin: auto;\n    outline: none;\n}",".App { \n  /* If the margin property has one value:\n      margin: 10px;\n      all four margins are 10px */\n  margin: auto;\n  /* If the padding property has two values:\n      padding:10px 5px;\n      top and bottom padding are 10px\n      right and left padding are 5px */\n  padding: 10px 20px;\n\n  /* The max-width property defines the maximum width of APP. */\n  max-width: 1100px;\n}\n\n\n\n\n/* * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nhtml,\nbody {\n  background: #000 url('img/bg.jpg') no-repeat center center/cover;\n  height: 100vh;\n  color: #fff;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\na {\n  text-decoration: none;\n}\n\n.container {\n  max-width: 1100px;\n  margin: auto;\n  padding: 0 20px;\n}\n\n.btn {\n  display: inline-block;\n  color: #fff;\n  background-color: #3fb573;\n  font-size: 1em;\n  text-align: center;\n  padding: 10px 15px;\n  border: 0;\n  margin: 10px 0;\n}\n\nheader {\n  height: 200px;\n}\n\nheader img {\n  width: 200px;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.search {\n  height: 100px;\n}\n\ninput[type='text'] {\n  display: block;\n  padding: 10px;\n  font-size: 20px;\n  border: 0;\n  border-radius: 5px;\n  width: 60%;\n  margin: auto;\n  outline: none;\n}\n\n.cards {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 1rem;\n}\n\n.card {\n  cursor: pointer;\n  background-color: transparent;\n  height: 300px;\n  perspective: 1000px;\n}\n\n.card h1 {\n  font-size: 25px;\n  border-bottom: 1px #fff solid;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n}\n\n.card img {\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n}\n\n.card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n}\n\n.card:hover .card-inner {\n  transform: rotateY(180deg);\n}\n\n.card-front,\n.card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n}\n\n.card-back {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n  transform: rotateY(180deg);\n}\n\n.card li {\n  list-style: none;\n  padding-bottom: 10px;\n}\n\n@media (max-width: 800px) {\n  .cards {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (max-width: 500px) {\n  .cards {\n    grid-template-columns: 1fr;\n  }\n  .card img {\n    width: 100%;\n    height: 300px;\n    object-fit: contain;\n  }\n} */\n"]}